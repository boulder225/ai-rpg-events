{"ast":null,"code":"var _jsxFileName = \"/Users/enrico/workspace/myobsidian/ai-rpg-events/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  async createSession(playerName) {\n    const response = await fetch('/api/session/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: 'player_' + Date.now(),\n        player_name: playerName\n      })\n    });\n    return response.json();\n  },\n  async executeAction(sessionId, command) {\n    const response = await fetch('/api/game/action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        session_id: sessionId,\n        command\n      })\n    });\n    return response.json();\n  },\n  async getStatus(sessionId) {\n    const response = await fetch(`/api/game/status?session_id=${sessionId}`);\n    return response.json();\n  },\n  async getMetrics() {\n    const response = await fetch('/api/metrics');\n    return response.json();\n  }\n};\n\n// Adventure Map Component\nconst AdventureMap = ({\n  currentLocation,\n  sessionId,\n  onLocationUpdate\n}) => {\n  const locationMap = {\n    'village': 'üèòÔ∏è Your Home Village',\n    'cave_entrance': 'üï≥Ô∏è Cave Entrance',\n    'first_corridor': 'üåë Dark Corridor',\n    'snake_chamber': 'üêç Snake Chamber',\n    'aleena_chamber': '‚õ™ Aleena\\'s Chamber',\n    'ghoul_corridor': 'üíÄ Ghoul Corridor',\n    'locked_door_area': 'üö™ Locked Door',\n    'bargle_chamber': 'üßô‚Äç‚ôÇÔ∏è Bargle\\'s Lair',\n    'exit_passage': 'üåÖ Hidden Exit'\n  };\n  const locationConnections = {\n    'village': ['cave_entrance'],\n    'cave_entrance': ['village', 'first_corridor'],\n    'first_corridor': ['cave_entrance', 'snake_chamber'],\n    'snake_chamber': ['first_corridor', 'aleena_chamber'],\n    'aleena_chamber': ['snake_chamber', 'ghoul_corridor'],\n    'ghoul_corridor': ['aleena_chamber', 'locked_door_area'],\n    'locked_door_area': ['ghoul_corridor', 'bargle_chamber'],\n    'bargle_chamber': ['locked_door_area', 'exit_passage'],\n    'exit_passage': ['bargle_chamber', 'village']\n  };\n  const updateMap = async () => {\n    if (!sessionId) return;\n    try {\n      const data = await api.getStatus(sessionId);\n      if (data.success && data.context.current_location) {\n        onLocationUpdate(data.context.current_location);\n      }\n    } catch (error) {\n      console.error('Map update error:', error);\n    }\n  };\n  const getLocationClass = locationId => {\n    var _locationConnections$;\n    let className = 'map-location';\n    if (locationId === currentLocation) {\n      className += ' current';\n    } else if ((_locationConnections$ = locationConnections[currentLocation]) !== null && _locationConnections$ !== void 0 && _locationConnections$.includes(locationId)) {\n      className += ' connected';\n    }\n    return className;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDDFA\\uFE0F Adventure Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-location\",\n      children: [\"\\uD83D\\uDCCD Current Location: \", locationMap[currentLocation] || locationMap['village']]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: Object.entries(locationMap).map(([locationId, name]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getLocationClass(locationId),\n        \"data-location\": locationId,\n        children: name\n      }, locationId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateMap,\n      children: \"\\uD83D\\uDD04 Update Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n// Game Actions Component\n_c = AdventureMap;\nconst GameActions = ({\n  sessionId,\n  onActionExecuted\n}) => {\n  _s();\n  const [command, setCommand] = useState('/look around');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const executeAction = async () => {\n    if (!sessionId || !command) {\n      alert('üö® Please enter session ID and command');\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await api.executeAction(sessionId, command);\n      if (data.success) {\n        setResult(`üé≠ AI RESPONSE:\\n${data.message}\\n\\nüìä CONTEXT:\\n${JSON.stringify(data.context, null, 2)}`);\n        onActionExecuted();\n      } else {\n        setResult(`‚ùå ERROR: ${data.error}`);\n      }\n    } catch (error) {\n      alert('üåê Network error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const quickCommands = [{\n    label: 'üëÅÔ∏è Look',\n    cmd: '/look around'\n  }, {\n    label: 'üí¨ Talk',\n    cmd: '/talk tavern_keeper'\n  }, {\n    label: '‚öîÔ∏è Fight',\n    cmd: '/attack goblin'\n  }, {\n    label: 'üï≥Ô∏è Go Cave',\n    cmd: '/go cave'\n  }, {\n    label: 'üèòÔ∏è Go Village',\n    cmd: '/go village'\n  }, {\n    label: 'üåë Go Corridor',\n    cmd: '/go corridor'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u2694\\uFE0F Game Actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: command,\n      onChange: e => setCommand(e.target.value),\n      placeholder: \"Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), quickCommands.map((cmd, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCommand(cmd.cmd),\n      children: cmd.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: executeAction,\n      disabled: loading,\n      children: loading ? '‚è≥ Processing...' : 'üéØ Execute Action'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n// Session Management Component\n_s(GameActions, \"RSDVe4Swd4/o5fEa0olPkO+y974=\");\n_c2 = GameActions;\nconst SessionManager = ({\n  onSessionCreated\n}) => {\n  _s2();\n  const [playerName, setPlayerName] = useState('Lyra the Mystic');\n  const [sessionInfo, setSessionInfo] = useState('');\n  const [loading, setLoading] = useState(false);\n  const createSession = async () => {\n    if (!playerName) {\n      alert('üö® Please enter a hero name!');\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await api.createSession(playerName);\n      if (data.success) {\n        setSessionInfo(`üÜî Session: ${data.session_id}\\n\\nüé¨ ${data.message}`);\n        onSessionCreated(data.session_id);\n      } else {\n        alert('‚ùå Error: ' + (data.error || 'Unknown error'));\n      }\n    } catch (error) {\n      alert('üåê Network error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF1F Create New Adventure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: playerName,\n      onChange: e => setPlayerName(e.target.value),\n      placeholder: \"Hero Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createSession,\n      disabled: loading,\n      children: loading ? '‚è≥ Creating...' : 'üöÄ Begin Journey'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), sessionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: sessionInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n// AI Status Component\n_s2(SessionManager, \"CY1VIOyXDUckDid45HHKdee+36Q=\");\n_c3 = SessionManager;\nconst AIStatus = () => {\n  _s3();\n  const [status, setStatus] = useState('üîÑ Checking AI status...');\n  const [statusClass, setStatusClass] = useState('');\n  useEffect(() => {\n    const checkAIStatus = async () => {\n      try {\n        const data = await api.getMetrics();\n        const aiConfigured = data.context.ai.configured;\n        if (aiConfigured) {\n          setStatus('ü§ñ Claude AI: ACTIVE - Intelligent responses enabled');\n          setStatusClass('ai-active');\n        } else {\n          setStatus('‚ö†Ô∏è Claude AI: SIMULATION MODE - Add CLAUDE_API_KEY to .env for real AI');\n          setStatusClass('ai-simulation');\n        }\n      } catch (error) {\n        setStatus('‚ùå AI Status: Unknown');\n        setStatusClass('ai-error');\n      }\n    };\n    checkAIStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ai-status ${statusClass}`,\n    children: status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App Component\n_s3(AIStatus, \"jmxC2igPXPDdt5/fdB4yRQN1uSU=\");\n_c4 = AIStatus;\nconst App = () => {\n  _s4();\n  const [sessionId, setSessionId] = useState('');\n  const [currentLocation, setCurrentLocation] = useState('village');\n  const handleSessionCreated = newSessionId => {\n    setSessionId(newSessionId);\n    setCurrentLocation('village');\n  };\n  const handleActionExecuted = () => {\n    // Auto-update map after actions\n    setTimeout(async () => {\n      if (sessionId) {\n        try {\n          const data = await api.getStatus(sessionId);\n          if (data.success && data.context.current_location) {\n            setCurrentLocation(data.context.current_location);\n          }\n        } catch (error) {\n          console.error('Auto-update error:', error);\n        }\n      }\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDFAE AI-RPG Event Sourcing Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83E\\uDD16 Claude AI Integration \\u2022 \\uD83C\\uDF0D Persistent Worlds \\u2022 \\u26A1 Real-time Event Sourcing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AIStatus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(SessionManager, {\n          onSessionCreated: handleSessionCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameActions, {\n          sessionId: sessionId,\n          onActionExecuted: handleActionExecuted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AdventureMap, {\n          currentLocation: currentLocation,\n          sessionId: sessionId,\n          onLocationUpdate: setCurrentLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s4(App, \"pqLMvr2r8TjnBxdxEjdmuKqlKts=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AdventureMap\");\n$RefreshReg$(_c2, \"GameActions\");\n$RefreshReg$(_c3, \"SessionManager\");\n$RefreshReg$(_c4, \"AIStatus\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","api","createSession","playerName","response","fetch","method","headers","body","JSON","stringify","player_id","Date","now","player_name","json","executeAction","sessionId","command","session_id","getStatus","getMetrics","AdventureMap","currentLocation","onLocationUpdate","locationMap","locationConnections","updateMap","data","success","context","current_location","error","console","getLocationClass","locationId","_locationConnections$","className","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","name","onClick","_c","GameActions","onActionExecuted","_s","setCommand","result","setResult","loading","setLoading","alert","message","quickCommands","label","cmd","type","value","onChange","e","target","placeholder","index","disabled","_c2","SessionManager","onSessionCreated","_s2","setPlayerName","sessionInfo","setSessionInfo","_c3","AIStatus","_s3","status","setStatus","statusClass","setStatusClass","checkAIStatus","aiConfigured","ai","configured","_c4","App","_s4","setSessionId","setCurrentLocation","handleSessionCreated","newSessionId","handleActionExecuted","setTimeout","_c5","$RefreshReg$"],"sources":["/Users/enrico/workspace/myobsidian/ai-rpg-events/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// API service\nconst api = {\n  async createSession(playerName) {\n    const response = await fetch('/api/session/create', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        player_id: 'player_' + Date.now(),\n        player_name: playerName\n      })\n    });\n    return response.json();\n  },\n\n  async executeAction(sessionId, command) {\n    const response = await fetch('/api/game/action', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ session_id: sessionId, command })\n    });\n    return response.json();\n  },\n\n  async getStatus(sessionId) {\n    const response = await fetch(`/api/game/status?session_id=${sessionId}`);\n    return response.json();\n  },\n\n  async getMetrics() {\n    const response = await fetch('/api/metrics');\n    return response.json();\n  }\n};\n\n// Adventure Map Component\nconst AdventureMap = ({ currentLocation, sessionId, onLocationUpdate }) => {\n  const locationMap = {\n    'village': 'üèòÔ∏è Your Home Village',\n    'cave_entrance': 'üï≥Ô∏è Cave Entrance',\n    'first_corridor': 'üåë Dark Corridor',\n    'snake_chamber': 'üêç Snake Chamber',\n    'aleena_chamber': '‚õ™ Aleena\\'s Chamber',\n    'ghoul_corridor': 'üíÄ Ghoul Corridor',\n    'locked_door_area': 'üö™ Locked Door',\n    'bargle_chamber': 'üßô‚Äç‚ôÇÔ∏è Bargle\\'s Lair',\n    'exit_passage': 'üåÖ Hidden Exit'\n  };\n\n  const locationConnections = {\n    'village': ['cave_entrance'],\n    'cave_entrance': ['village', 'first_corridor'],\n    'first_corridor': ['cave_entrance', 'snake_chamber'],\n    'snake_chamber': ['first_corridor', 'aleena_chamber'],\n    'aleena_chamber': ['snake_chamber', 'ghoul_corridor'],\n    'ghoul_corridor': ['aleena_chamber', 'locked_door_area'],\n    'locked_door_area': ['ghoul_corridor', 'bargle_chamber'],\n    'bargle_chamber': ['locked_door_area', 'exit_passage'],\n    'exit_passage': ['bargle_chamber', 'village']\n  };\n\n  const updateMap = async () => {\n    if (!sessionId) return;\n    try {\n      const data = await api.getStatus(sessionId);\n      if (data.success && data.context.current_location) {\n        onLocationUpdate(data.context.current_location);\n      }\n    } catch (error) {\n      console.error('Map update error:', error);\n    }\n  };\n\n  const getLocationClass = (locationId) => {\n    let className = 'map-location';\n    if (locationId === currentLocation) {\n      className += ' current';\n    } else if (locationConnections[currentLocation]?.includes(locationId)) {\n      className += ' connected';\n    }\n    return className;\n  };\n\n  return (\n    <div className=\"section\">\n      <h3>üó∫Ô∏è Adventure Map</h3>\n      <div className=\"current-location\">\n        üìç Current Location: {locationMap[currentLocation] || locationMap['village']}\n      </div>\n      <div className=\"map-container\">\n        {Object.entries(locationMap).map(([locationId, name]) => (\n          <div\n            key={locationId}\n            className={getLocationClass(locationId)}\n            data-location={locationId}\n          >\n            {name}\n          </div>\n        ))}\n      </div>\n      <button onClick={updateMap}>üîÑ Update Map</button>\n    </div>\n  );\n};\n\n// Game Actions Component\nconst GameActions = ({ sessionId, onActionExecuted }) => {\n  const [command, setCommand] = useState('/look around');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const executeAction = async () => {\n    if (!sessionId || !command) {\n      alert('üö® Please enter session ID and command');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const data = await api.executeAction(sessionId, command);\n      if (data.success) {\n        setResult(`üé≠ AI RESPONSE:\\n${data.message}\\n\\nüìä CONTEXT:\\n${JSON.stringify(data.context, null, 2)}`);\n        onActionExecuted();\n      } else {\n        setResult(`‚ùå ERROR: ${data.error}`);\n      }\n    } catch (error) {\n      alert('üåê Network error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const quickCommands = [\n    { label: 'üëÅÔ∏è Look', cmd: '/look around' },\n    { label: 'üí¨ Talk', cmd: '/talk tavern_keeper' },\n    { label: '‚öîÔ∏è Fight', cmd: '/attack goblin' },\n    { label: 'üï≥Ô∏è Go Cave', cmd: '/go cave' },\n    { label: 'üèòÔ∏è Go Village', cmd: '/go village' },\n    { label: 'üåë Go Corridor', cmd: '/go corridor' }\n  ];\n\n  return (\n    <div className=\"section\">\n      <h3>‚öîÔ∏è Game Actions</h3>\n      <input\n        type=\"text\"\n        value={command}\n        onChange={(e) => setCommand(e.target.value)}\n        placeholder=\"Command\"\n      />\n      <br />\n      {quickCommands.map((cmd, index) => (\n        <button key={index} onClick={() => setCommand(cmd.cmd)}>\n          {cmd.label}\n        </button>\n      ))}\n      <br />\n      <button onClick={executeAction} disabled={loading}>\n        {loading ? '‚è≥ Processing...' : 'üéØ Execute Action'}\n      </button>\n      {result && <div className=\"output\">{result}</div>}\n    </div>\n  );\n};\n\n// Session Management Component\nconst SessionManager = ({ onSessionCreated }) => {\n  const [playerName, setPlayerName] = useState('Lyra the Mystic');\n  const [sessionInfo, setSessionInfo] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const createSession = async () => {\n    if (!playerName) {\n      alert('üö® Please enter a hero name!');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const data = await api.createSession(playerName);\n      if (data.success) {\n        setSessionInfo(`üÜî Session: ${data.session_id}\\n\\nüé¨ ${data.message}`);\n        onSessionCreated(data.session_id);\n      } else {\n        alert('‚ùå Error: ' + (data.error || 'Unknown error'));\n      }\n    } catch (error) {\n      alert('üåê Network error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h3>üåü Create New Adventure</h3>\n      <input\n        type=\"text\"\n        value={playerName}\n        onChange={(e) => setPlayerName(e.target.value)}\n        placeholder=\"Hero Name\"\n      />\n      <br />\n      <button onClick={createSession} disabled={loading}>\n        {loading ? '‚è≥ Creating...' : 'üöÄ Begin Journey'}\n      </button>\n      {sessionInfo && <div className=\"output\">{sessionInfo}</div>}\n    </div>\n  );\n};\n\n// AI Status Component\nconst AIStatus = () => {\n  const [status, setStatus] = useState('üîÑ Checking AI status...');\n  const [statusClass, setStatusClass] = useState('');\n\n  useEffect(() => {\n    const checkAIStatus = async () => {\n      try {\n        const data = await api.getMetrics();\n        const aiConfigured = data.context.ai.configured;\n        \n        if (aiConfigured) {\n          setStatus('ü§ñ Claude AI: ACTIVE - Intelligent responses enabled');\n          setStatusClass('ai-active');\n        } else {\n          setStatus('‚ö†Ô∏è Claude AI: SIMULATION MODE - Add CLAUDE_API_KEY to .env for real AI');\n          setStatusClass('ai-simulation');\n        }\n      } catch (error) {\n        setStatus('‚ùå AI Status: Unknown');\n        setStatusClass('ai-error');\n      }\n    };\n\n    checkAIStatus();\n  }, []);\n\n  return (\n    <div className={`ai-status ${statusClass}`}>\n      {status}\n    </div>\n  );\n};\n\n// Main App Component\nconst App = () => {\n  const [sessionId, setSessionId] = useState('');\n  const [currentLocation, setCurrentLocation] = useState('village');\n\n  const handleSessionCreated = (newSessionId) => {\n    setSessionId(newSessionId);\n    setCurrentLocation('village');\n  };\n\n  const handleActionExecuted = () => {\n    // Auto-update map after actions\n    setTimeout(async () => {\n      if (sessionId) {\n        try {\n          const data = await api.getStatus(sessionId);\n          if (data.success && data.context.current_location) {\n            setCurrentLocation(data.context.current_location);\n          }\n        } catch (error) {\n          console.error('Auto-update error:', error);\n        }\n      }\n    }, 500);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>üéÆ AI-RPG Event Sourcing Platform</h1>\n          <p>ü§ñ Claude AI Integration ‚Ä¢ üåç Persistent Worlds ‚Ä¢ ‚ö° Real-time Event Sourcing</p>\n          <AIStatus />\n        </div>\n        \n        <div className=\"grid\">\n          <SessionManager onSessionCreated={handleSessionCreated} />\n          \n          <GameActions \n            sessionId={sessionId}\n            onActionExecuted={handleActionExecuted}\n          />\n          \n          <AdventureMap \n            currentLocation={currentLocation}\n            sessionId={sessionId}\n            onLocationUpdate={setCurrentLocation}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}